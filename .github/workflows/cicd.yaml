name: Build Operator

on: [push, pull_request]

jobs:
  build-operator:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.24.5"
      - name: build-operator
        run: make --directory=operator build-operator
      - name: Start KIND cluster
        run: sudo make --directory=operator kind-up
      - name: Fix kubeconfig permissions
        run: |
          sudo chmod 777 -R operator/hack/kind || true
      - name: Verify kubeconfig and cluster connectivity
        run: |
          set -euo pipefail
          KCFG=operator/hack/kind/kubeconfig
          echo "Using kubeconfig at: $(realpath $KCFG)"
          kubectl --kubeconfig "$KCFG" config get-contexts || true
          kubectl --kubeconfig "$KCFG" cluster-info --context kind-grove-test-cluster
          kubectl --kubeconfig "$KCFG" get nodes -o wide
      - name: Install CRDs required by sample (server-side apply to avoid large annotations)
        run: |
          set -euo pipefail
          KCFG=operator/hack/kind/kubeconfig
          kubectl --kubeconfig "$KCFG" apply --server-side -f operator/api/core/v1alpha1/crds/grove.io_podcliques.yaml
          kubectl --kubeconfig "$KCFG" apply --server-side -f operator/api/core/v1alpha1/crds/grove.io_podcliquescalinggroups.yaml
          kubectl --kubeconfig "$KCFG" apply --server-side -f operator/api/core/v1alpha1/crds/grove.io_podgangsets.yaml
          kubectl --kubeconfig "$KCFG" apply --server-side -f scheduler/api/core/v1alpha1/crds/scheduler.grove.io_podgangs.yaml
          kubectl --kubeconfig "$KCFG" wait --for=condition=Established \
            crd/podcliques.grove.io \
            crd/podcliquescalinggroups.grove.io \
            crd/podgangsets.grove.io \
            crd/podgangs.scheduler.grove.io \
            --timeout=120s
      - name: Deploy grove-operator to KIND via skaffold
        env:
          KUBECONFIG: ${{ github.workspace }}/operator/hack/kind/kubeconfig
          SKAFFOLD_KUBE_CONTEXT: kind-grove-test-cluster
        run: |
          set -euo pipefail
          make --directory=operator deploy
      - name: Wait for grove-operator deployment to be Ready
        run: |
          set -euo pipefail
          KCFG=operator/hack/kind/kubeconfig
          NS=default
          echo "[operator-wait] Waiting for deployment/grove-operator in namespace $NS to become Available..."
          kubectl --kubeconfig "$KCFG" -n "$NS" rollout status deployment/grove-operator --timeout=300s
          kubectl --kubeconfig "$KCFG" -n "$NS" get deployment grove-operator -o wide
      - name: Apply sample manifest to KIND cluster
        run: kubectl --kubeconfig operator/hack/kind/kubeconfig apply -f operator/samples/simple/simple1.yaml
      - name: Verify custom resources created
        run: |
          set -euo pipefail
          KCFG=operator/hack/kind/kubeconfig
          NS=default
          echo "[cr-check] Listing PodGangSet/PodClique/PCSG in $NS"
          kubectl --kubeconfig "$KCFG" -n "$NS" get podgangsets.grove.io -o wide || true
          kubectl --kubeconfig "$KCFG" -n "$NS" get podcliques.grove.io -o wide || true
          kubectl --kubeconfig "$KCFG" -n "$NS" get podcliquescalinggroups.grove.io -o wide || true
      - name: Wait for simple1 Pods to be Ready
        run: |
          set -euo pipefail
          KCFG=operator/hack/kind/kubeconfig
          NS=default
          # Pods inherit labels from PodClique plus operator defaults; select by PGS name label and component
          SEL='app.kubernetes.io/part-of=simple1,app.kubernetes.io/managed-by=grove-operator'
          # Wait up to 120s for pods to be created
          for i in {1..24}; do
            echo "[create-wait] Iteration $i/24 - listing pods matching $SEL in namespace $NS"
            kubectl --kubeconfig "$KCFG" -n "$NS" get pods -l "$SEL" -o wide || true
            COUNT=$(kubectl --kubeconfig "$KCFG" -n "$NS" get pods -l "$SEL" --no-headers 2>/dev/null | wc -l)
            if [ "$COUNT" -gt 0 ]; then
              break
            fi
            sleep 5
          done
          # Wait for pods to become Ready
          echo "[ready-wait] Waiting for pods with $SEL in $NS to become Ready..."
          kubectl --kubeconfig "$KCFG" -n "$NS" wait --for=condition=Ready pods -l "$SEL" --timeout=300s
          kubectl --kubeconfig "$KCFG" -n "$NS" get pods -l "$SEL" -o wide
      - name: Diagnostics on failure
        if: ${{ failure() }}
        run: |
          set +euo pipefail
          KCFG=operator/hack/kind/kubeconfig
          NS=default
          echo "[diag] Operator deployment and pods in $NS"
          kubectl --kubeconfig "$KCFG" -n "$NS" get deploy,pods -o wide || true
          echo "[diag] Custom resources in $NS"
          kubectl --kubeconfig "$KCFG" -n "$NS" get podgangsets.grove.io,podcliques.grove.io,podcliquescalinggroups.grove.io -o wide || true
          echo "[diag] Describe PodGangSet simple1"
          kubectl --kubeconfig "$KCFG" -n "$NS" describe podgangset.grove.io/simple1 || true
          echo "[diag] Operator logs"
          kubectl --kubeconfig "$KCFG" -n "$NS" logs deploy/grove-operator --tail=200 || true
          echo "[diag] Recent events"
          kubectl --kubeconfig "$KCFG" -n "$NS" get events --sort-by=.lastTimestamp | tail -n 200 || true