/*
Copyright 2025 The Grove Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	corev1alpha1 "github.com/NVIDIA/grove/scheduler/api/core/v1alpha1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// PodGangLister helps list PodGangs.
// All objects returned here must be treated as read-only.
type PodGangLister interface {
	// List lists all PodGangs in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*corev1alpha1.PodGang, err error)
	// PodGangs returns an object that can list and get PodGangs.
	PodGangs(namespace string) PodGangNamespaceLister
	PodGangListerExpansion
}

// podGangLister implements the PodGangLister interface.
type podGangLister struct {
	listers.ResourceIndexer[*corev1alpha1.PodGang]
}

// NewPodGangLister returns a new PodGangLister.
func NewPodGangLister(indexer cache.Indexer) PodGangLister {
	return &podGangLister{listers.New[*corev1alpha1.PodGang](indexer, corev1alpha1.Resource("podgang"))}
}

// PodGangs returns an object that can list and get PodGangs.
func (s *podGangLister) PodGangs(namespace string) PodGangNamespaceLister {
	return podGangNamespaceLister{listers.NewNamespaced[*corev1alpha1.PodGang](s.ResourceIndexer, namespace)}
}

// PodGangNamespaceLister helps list and get PodGangs.
// All objects returned here must be treated as read-only.
type PodGangNamespaceLister interface {
	// List lists all PodGangs in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*corev1alpha1.PodGang, err error)
	// Get retrieves the PodGang from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*corev1alpha1.PodGang, error)
	PodGangNamespaceListerExpansion
}

// podGangNamespaceLister implements the PodGangNamespaceLister
// interface.
type podGangNamespaceLister struct {
	listers.ResourceIndexer[*corev1alpha1.PodGang]
}
