---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.3
  name: podgangs.grove.io
spec:
  group: grove.io
  names:
    kind: PodGang
    listKind: PodGangList
    plural: podgangs
    shortNames:
    - pg
    singular: podgang
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: PodGang defines a specification of a group of pods that should
          be scheduled together.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the specification of the PodGang.
            properties:
              networkPackStrategy:
                description: NetworkPackStrategy defines the strategy for packing
                  pods on nodes while minimizing network switch hops.
                enum:
                - BestEffort
                - Strict
                type: string
              podgroups:
                description: PodGroups is a list of member pod groups in the PodGang.
                items:
                  description: PodGroup defines a set of pods in a PodGang that share
                    the same PodTemplateSpec.
                  properties:
                    minReplicas:
                      description: |-
                        MinReplicas is the number of replicas that needs to be gang scheduled.
                        If the MinReplicas is greater than len(PodReferences) then scheduler makes the best effort to schedule as many pods beyond
                        MinReplicas. However, guaranteed gang scheduling is only provided for MinReplicas.
                      format: int32
                      type: integer
                    podReferences:
                      description: PodReferences is a list of references to the Pods
                        that are part of this group.
                      items:
                        description: |-
                          NamespacedName is a struct that contains the namespace and name of an object.
                          types.NamespacedName does not have json tags, so we define our own for the time being.
                          If https://github.com/kubernetes/kubernetes/issues/131313 is resolved, we can switch to using the APIMachinery type instead.
                        properties:
                          name:
                            description: Name is the name of the object.
                            type: string
                          namespace:
                            description: Namespace is the namespace of the object.
                            type: string
                        required:
                        - name
                        - namespace
                        type: object
                      type: array
                  required:
                  - minReplicas
                  - podReferences
                  type: object
                type: array
              priorityClassName:
                description: |-
                  PriorityClassName is the name of the PriorityClass to be used for the PodGangSet.
                  If specified, indicates the priority of the PodGangSet. "system-node-critical" and
                  "system-cluster-critical" are two special keywords which indicate the
                  highest priorities with the former being the highest priority. Any other
                  name must be defined by creating a PriorityClass object with that name.
                  If not specified, the pod priority will be default or zero if there is no default.
                type: string
              reuseReservationRef:
                description: |-
                  ReuseReservationRef holds the reference to another PodGang resource scheduled previously.
                  During updates, an operator can suggest to reuse the reservation of the previous PodGang for a newer version of the
                  PodGang resource. This is a suggestion for the scheduler and not a requirement that must be met. If the scheduler plugin
                  finds that the reservation done previously was network optimised and there are no better alternatives available, then it
                  will reuse the reservation. If there are better alternatives available, then the scheduler will ignore this suggestion.
                properties:
                  name:
                    description: Name is the name of the object.
                    type: string
                  namespace:
                    description: Namespace is the namespace of the object.
                    type: string
                required:
                - name
                - namespace
                type: object
              spreadConstraints:
                description: SpreadConstraints defines the constraints for spreading
                  PodGang's filtered by the same label selector, across domains identified
                  by a topology key.
                items:
                  description: TopologySpreadConstraint specifies how to spread matching
                    pods among the given topology.
                  properties:
                    labelSelector:
                      description: |-
                        LabelSelector is used to find matching pods.
                        Pods that match this label selector are counted to determine the number of pods
                        in their corresponding topology domain.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: |-
                              A label selector requirement is a selector that contains values, a key, and an operator that
                              relates the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: |-
                                  operator represents a key's relationship to a set of values.
                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                type: string
                              values:
                                description: |-
                                  values is an array of string values. If the operator is In or NotIn,
                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced during a strategic
                                  merge patch.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: |-
                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                          type: object
                      type: object
                      x-kubernetes-map-type: atomic
                    matchLabelKeys:
                      description: |-
                        MatchLabelKeys is a set of pod label keys to select the pods over which
                        spreading will be calculated. The keys are used to lookup values from the
                        incoming pod labels, those key-value labels are ANDed with labelSelector
                        to select the group of existing pods over which spreading will be calculated
                        for the incoming pod. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.
                        MatchLabelKeys cannot be set when LabelSelector isn't set.
                        Keys that don't exist in the incoming pod labels will
                        be ignored. A null or empty list means only match against labelSelector.

                        This is a beta field and requires the MatchLabelKeysInPodTopologySpread feature gate to be enabled (enabled by default).
                      items:
                        type: string
                      type: array
                      x-kubernetes-list-type: atomic
                    maxSkew:
                      description: |-
                        MaxSkew describes the degree to which pods may be unevenly distributed.
                        When `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference
                        between the number of matching pods in the target topology and the global minimum.
                        The global minimum is the minimum number of matching pods in an eligible domain
                        or zero if the number of eligible domains is less than MinDomains.
                        For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same
                        labelSelector spread as 2/2/1:
                        In this case, the global minimum is 1.
                        | zone1 | zone2 | zone3 |
                        |  P P  |  P P  |   P   |
                        - if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 2/2/2;
                        scheduling it onto zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2)
                        violate MaxSkew(1).
                        - if MaxSkew is 2, incoming pod can be scheduled onto any zone.
                        When `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence
                        to topologies that satisfy it.
                        It's a required field. Default value is 1 and 0 is not allowed.
                      format: int32
                      type: integer
                    minDomains:
                      description: |-
                        MinDomains indicates a minimum number of eligible domains.
                        When the number of eligible domains with matching topology keys is less than minDomains,
                        Pod Topology Spread treats "global minimum" as 0, and then the calculation of Skew is performed.
                        And when the number of eligible domains with matching topology keys equals or greater than minDomains,
                        this value has no effect on scheduling.
                        As a result, when the number of eligible domains is less than minDomains,
                        scheduler won't schedule more than maxSkew Pods to those domains.
                        If value is nil, the constraint behaves as if MinDomains is equal to 1.
                        Valid values are integers greater than 0.
                        When value is not nil, WhenUnsatisfiable must be DoNotSchedule.

                        For example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same
                        labelSelector spread as 2/2/2:
                        | zone1 | zone2 | zone3 |
                        |  P P  |  P P  |  P P  |
                        The number of domains is less than 5(MinDomains), so "global minimum" is treated as 0.
                        In this situation, new pod with the same labelSelector cannot be scheduled,
                        because computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones,
                        it will violate MaxSkew.
                      format: int32
                      type: integer
                    nodeAffinityPolicy:
                      description: |-
                        NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector
                        when calculating pod topology spread skew. Options are:
                        - Honor: only nodes matching nodeAffinity/nodeSelector are included in the calculations.
                        - Ignore: nodeAffinity/nodeSelector are ignored. All nodes are included in the calculations.

                        If this value is nil, the behavior is equivalent to the Honor policy.
                      type: string
                    nodeTaintsPolicy:
                      description: |-
                        NodeTaintsPolicy indicates how we will treat node taints when calculating
                        pod topology spread skew. Options are:
                        - Honor: nodes without taints, along with tainted nodes for which the incoming pod
                        has a toleration, are included.
                        - Ignore: node taints are ignored. All nodes are included.

                        If this value is nil, the behavior is equivalent to the Ignore policy.
                      type: string
                    topologyKey:
                      description: |-
                        TopologyKey is the key of node labels. Nodes that have a label with this key
                        and identical values are considered to be in the same topology.
                        We consider each <key, value> as a "bucket", and try to put balanced number
                        of pods into each bucket.
                        We define a domain as a particular instance of a topology.
                        Also, we define an eligible domain as a domain whose nodes meet the requirements of
                        nodeAffinityPolicy and nodeTaintsPolicy.
                        e.g. If TopologyKey is "kubernetes.io/hostname", each Node is a domain of that topology.
                        And, if TopologyKey is "topology.kubernetes.io/zone", each zone is a domain of that topology.
                        It's a required field.
                      type: string
                    whenUnsatisfiable:
                      description: |-
                        WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy
                        the spread constraint.
                        - DoNotSchedule (default) tells the scheduler not to schedule it.
                        - ScheduleAnyway tells the scheduler to schedule the pod in any location,
                          but giving higher precedence to topologies that would help reduce the
                          skew.
                        A constraint is considered "Unsatisfiable" for an incoming pod
                        if and only if every possible node assignment for that pod would violate
                        "MaxSkew" on some topology.
                        For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same
                        labelSelector spread as 3/1/1:
                        | zone1 | zone2 | zone3 |
                        | P P P |   P   |   P   |
                        If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled
                        to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies
                        MaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler
                        won't make it *more* imbalanced.
                        It's a required field.
                      type: string
                  required:
                  - maxSkew
                  - topologyKey
                  - whenUnsatisfiable
                  type: object
                type: array
              terminationDelay:
                description: |-
                  TerminationDelay is the delay after which the gang termination will be triggered.
                  A gang is a candidate for termination if number of running pods fall below a threshold for any PodClique.
                  If a PodGang remains a candidate past TerminationDelay then it will be terminated. This allows additional time
                  to the kube-scheduler to re-schedule sufficient pods in the PodGang that will result in having the total number of
                  running pods go above the threshold.
                type: string
            required:
            - podgroups
            type: object
          status:
            description: Status defines the status of the PodGang.
            properties:
              conditions:
                description: Conditions is a list of conditions that describe the
                  current state of the PodGang.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              placementScore:
                description: |-
                  PlacementScore is network optimality score for the PodGang. If the choice that the scheduler has made corresponds to the
                  best possible placement of the pods in the PodGang, then the score will be 1.0. Higher the score, better the placement.
                type: number
              schedulingPhase:
                description: SchedulingPhase is the current phase of scheduling for
                  the PodGang.
                type: string
            required:
            - schedulingPhase
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
