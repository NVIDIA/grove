/*
Copyright 2024.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/NVIDIA/grove/operator/api/podgangset/v1alpha1"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/listers"
	"k8s.io/client-go/tools/cache"
)

// PodGangSetLister helps list PodGangSets.
// All objects returned here must be treated as read-only.
type PodGangSetLister interface {
	// List lists all PodGangSets in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.PodGangSet, err error)
	// PodGangSets returns an object that can list and get PodGangSets.
	PodGangSets(namespace string) PodGangSetNamespaceLister
	PodGangSetListerExpansion
}

// podGangSetLister implements the PodGangSetLister interface.
type podGangSetLister struct {
	listers.ResourceIndexer[*v1alpha1.PodGangSet]
}

// NewPodGangSetLister returns a new PodGangSetLister.
func NewPodGangSetLister(indexer cache.Indexer) PodGangSetLister {
	return &podGangSetLister{listers.New[*v1alpha1.PodGangSet](indexer, v1alpha1.Resource("podgangset"))}
}

// PodGangSets returns an object that can list and get PodGangSets.
func (s *podGangSetLister) PodGangSets(namespace string) PodGangSetNamespaceLister {
	return podGangSetNamespaceLister{listers.NewNamespaced[*v1alpha1.PodGangSet](s.ResourceIndexer, namespace)}
}

// PodGangSetNamespaceLister helps list and get PodGangSets.
// All objects returned here must be treated as read-only.
type PodGangSetNamespaceLister interface {
	// List lists all PodGangSets in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.PodGangSet, err error)
	// Get retrieves the PodGangSet from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.PodGangSet, error)
	PodGangSetNamespaceListerExpansion
}

// podGangSetNamespaceLister implements the PodGangSetNamespaceLister
// interface.
type podGangSetNamespaceLister struct {
	listers.ResourceIndexer[*v1alpha1.PodGangSet]
}
