# ReplicaCount is the value for spec.replicas for the grove-operator deployment resource.
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: grove-operator
  # Overrides the image tag whose default is the chart appVersion.
  tag: v0.1.0-dev
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent

resources:
  limits:
    memory: 1Gi
  requests:
    cpu: 50m
    memory: 128Mi
    ephemeral-storage: 128Mi

# Set of tolerations to apply to the operator deployment.
tolerations: [ ]

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Automatically mount a ServiceAccount's API credentials?
  automount: false
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "grove-operator"
  labels:
    app.kubernetes.io/component: operator-serviceaccount
    app.kubernetes.io/name: grove-operator-service-account
    app.kubernetes.io/part-of: grove

config:
  runtimeClientConnection:
    qps: 100
    burst: 150
  leaderElection:
    enabled: true
    leaseDuration: 15s
    renewDeadline: 10s
    retryPeriod: 2s
    resourceLock: leases
    resourceName: grove-operator-leader-election
  server:
    webhooks:
      port: 9443
      # certDir is the directory path where certificate files are located.
      # The operator will look for tls.crt and tls.key in this directory.
      # Default: /etc/grove-operator/webhook-certs
      certDir: /etc/grove-operator/webhook-certs
      certManagement:
        # autoProvision enables automatic certificate generation and rotation.
        # Set to false to use external certificates (e.g., cert-manager).
        autoProvision: true
        # secretName is the name of the secret containing the webhook certificate.
        secretName: grove-webhook-server-cert
        # certManagerEnabled adds cert-manager.io/inject-ca-from annotation to webhook configs.
        # Requires cert-manager to be installed in the cluster.
        certManagerEnabled: false
    healthProbes:
      enable: false
      port: 9444
    metrics:
      port: 9445
  debugging:
    enableProfiling: false
  controllers:
    podCliqueSet:
      concurrentSyncs: 3
    podClique:
      concurrentSyncs: 3
  logLevel: info
  logFormat: json
  authorizer:
    enabled: false
    exemptServiceAccountUserNames:
      - system:serviceaccount:kube-system:generic-garbage-collector
      - system:serviceaccount:kube-system:horizontal-pod-autoscaler
      - system:kube-controller-manager
      - system:serviceaccount:kai-scheduler:pod-grouper
      - system:serviceaccount:kai-scheduler:binder

configMap:
  labels:
    app.kubernetes.io/component: operator-configmap
    app.kubernetes.io/name: grove-operator
    app.kubernetes.io/part-of: grove

deployment:
  labels:
    app.kubernetes.io/component: operator-deployment
    app.kubernetes.io/name: grove-operator
    app.kubernetes.io/part-of: grove
  env:
    - name: GROVE_INIT_CONTAINER_IMAGE
      value: grove-initc

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # NOTE: If you are going to change the service name then ensure that SAN entries in the webhook certificate also reflect the change.
  name: grove-operator
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 80
  labels:
    app.kubernetes.io/component: operator-service
    app.kubernetes.io/name: grove-operator
    app.kubernetes.io/part-of: grove

clusterRole:
  name: grove:system:grove-operator
  labels:
    app.kubernetes.io/component: operator-clusterrole
    app.kubernetes.io/name: grove-operator
    app.kubernetes.io/part-of: grove

clusterRoleBinding:
  name: grove:system:grove-operator
  labels:
    app.kubernetes.io/component: operator-clusterrolebinding
    app.kubernetes.io/name: grove-operator
    app.kubernetes.io/part-of: grove

webhooks:
  podCliqueSetValidationWebhook:
    labels:
      app.kubernetes.io/component: operator-pcs-validating-webhook
      app.kubernetes.io/name: pcs-validating-webhook
      app.kubernetes.io/part-of: grove
  podCliqueSetDefaultingWebhook:
    labels:
      app.kubernetes.io/component: operator-pcs-defaulting-webhook
      app.kubernetes.io/name: pcs-defaulting-webhook
      app.kubernetes.io/part-of: grove
  authorizerWebhook:
    labels:
      app.kubernetes.io/component: operator-authorizer-webhook
      app.kubernetes.io/name: authorizer-webhook
      app.kubernetes.io/part-of: grove

webhookServerSecret:
  labels:
    app.kubernetes.io/component: operator-webhook-server-secret
    app.kubernetes.io/name: grove-webhook-server-secret
    app.kubernetes.io/part-of: grove

# Webhook server certificate volume configuration
webhookServerCert:
  # mountPath is where the certificate volume will be mounted in the container.
  # This should typically match config.server.webhooks.certDir
  mountPath: /etc/grove-operator/webhook-certs
  
  # volume defines the volume source for certificates.
  # If not specified, defaults to using the Secret defined in config.server.webhooks.certManagement.secretName
  # 
  # Example 1 - Using hostPath (for local certificate files):
  # volume:
  #   hostPath:
  #     path: /host/path/to/certs
  #     type: Directory
  #
  # Example 2 - Using CSI driver (Vault):
  # volume:
  #   csi:
  #     driver: secrets-store.csi.k8s.io
  #     readOnly: true
  #     volumeAttributes:
  #       secretProviderClass: "grove-webhook-certs"
  #
  # Example 3 - Using ConfigMap (for testing only):
  # volume:
  #   configMap:
  #     name: grove-webhook-certs
  #
  # Example 4 - Using emptyDir (for testing):
  # volume:
  #   emptyDir: {}
  #
  volume: null

priorityClass:
  enabled: false
  name: grove-operator-priority-critical
  value: 999999550

